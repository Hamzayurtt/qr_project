<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>